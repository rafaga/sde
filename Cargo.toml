[package]
name = "sde"
version = "0.0.18"
edition = "2021"
authors = ["Rafael Amador <rafaga@duck.com"]
description = "A library to read Eve Online's SDE data from sqlite database."
readme = "README.md"
repository = "https://github.com/rafaga/sde/"
license = "LGPL-3.0-or-later"
keywords = ["sde", "eve-online"]
categories = ["games", "value-formatting"]
exclude = ["tests/",".github/",".gitignore"]

[badges]
# The `maintenance` table indicates the status of the maintenance of
# the crate. This may be used by a registry, but is currently not
# used by crates.io. See https://github.com/rust-lang/crates.io/issues/2437
# and https://github.com/rust-lang/crates.io/issues/2438 for more details.
#
# The `status` field is required. Available options are:
# - `actively-developed`: New features are being added and bugs are being fixed.
# - `passively-maintained`: There are no plans for new features, but the maintainer intends to
#   respond to issues that get filed.
# - `as-is`: The crate is feature complete, the maintainer does not intend to continue working on
#   it or providing support, but it works for the purposes it was designed for.
# - `experimental`: The author wants to share it with the community but is not intending to meet
#   anyone's particular use case.
# - `looking-for-maintainer`: The current maintainer would like to transfer the crate to someone
#   else.
# - `deprecated`: The maintainer does not recommend using this crate (the description of the crate
#   can describe why, there could be a better solution available or there could be problems with
#   the crate that the author does not want to fix).
# - `none`: Displays no badge on crates.io, since the maintainer has not chosen to specify
#   their intentions, potential crate users will need to investigate on their own.
maintenance = { status = "actively-developed" }

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = []
puffin = ["dep:puffin"]

[dependencies]
egui-map = { version = "0.0.13" }
puffin = { version = "0.19.0", optional = true, default-features = false}

# Not Windows:
[target.'cfg(not(windows))'.dependencies]
rusqlite = { version = "0.31.0", features = ["bundled-sqlcipher", "backup", "blob", "array"] }

# Windows:
[target.'cfg(windows)'.dependencies]
rusqlite = { version = "0.31.0", features = ["bundled-sqlcipher-vendored-openssl", "backup", "blob", "array"] }

[dev-dependencies]
# tokio = { version = "1", features = ["tokio-macros", "rt", "rt-multi-thread", "macros"] }

[patch.crates-io]
# If you want to use the bleeding edge version of egui and eframe:
# egui = { git = "https://github.com/emilk/egui", branch = "master" }
# eframe = { git = "https://github.com/emilk/egui", branch = "master" }
egui-map = { path = "../egui-map/"}
